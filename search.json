[{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"calculating-correlation-and-other-association-measures","dir":"Articles","previous_headings":"","what":"Calculating correlation and other association measures","title":"Calculating pairwise scores using bullseye.","text":"functions first column Table 1 calculates pairwise scores dataset. example, see pair_dcor calculates distance correlation every pair numeric variables penguins dataset. missing values dataset, pair_ functions use pairwise complete observations default. sc_dcor tibble class pairwise, two variables columns x y (arranged alphabetical order), calculated values column value, name score calculated column score. variables numeric, hence “nn” pair_type column. Similarly, one can use pair_nmi calculate normalised mutual information numeric, factor mixed pairs variables. main difference factor variables included. pair_type column, “ff” “fn” indicate factor-factor factor-numeric pairs. want control measure calculated, function pairwise_scores calculates different score depending variable types. can see, default uses pearson’s correlation numeric pairs, canonical correlation factor-numeric factor-factor pairs. addition polychoric correlation used two ordered factors, ordered factors data. Alternative scores may specified using control argument pairwise_scores. default value control argument given ","code":"sc_dcor <- pair_dcor(penguins) str(sc_dcor) #> pairwise [10 × 6] (S3: pairwise/tbl_df/tbl/data.frame) #>  $ x        : chr [1:10] \"bill_depth_mm\" \"bill_length_mm\" \"bill_depth_mm\" \"body_mass_g\" ... #>  $ y        : chr [1:10] \"bill_length_mm\" \"flipper_length_mm\" \"flipper_length_mm\" \"flipper_length_mm\" ... #>  $ score    : chr [1:10] \"dcor\" \"dcor\" \"dcor\" \"dcor\" ... #>  $ group    : chr [1:10] \"all\" \"all\" \"all\" \"all\" ... #>  $ value    : Named num [1:10] 0.387 0.666 0.704 0.867 0.587 ... #>   ..- attr(*, \"names\")= chr [1:10] \"bill_depth_mm\" \"bill_length_mm\" \"bill_depth_mm\" \"body_mass_g\" ... #>  $ pair_type: chr [1:10] \"nn\" \"nn\" \"nn\" \"nn\" ... sc_nmi <- pair_nmi(penguins) sc_nmi #> # A tibble: 28 × 6 #>    x                 y                 score group  value pair_type #>    <chr>             <chr>             <chr> <chr>  <dbl> <chr>     #>  1 bill_depth_mm     bill_length_mm    nmi   all   0.225  nn        #>  2 bill_length_mm    flipper_length_mm nmi   all   0.375  nn        #>  3 bill_depth_mm     flipper_length_mm nmi   all   0.470  nn        #>  4 body_mass_g       flipper_length_mm nmi   all   0.581  nn        #>  5 bill_length_mm    body_mass_g       nmi   all   0.303  nn        #>  6 bill_depth_mm     body_mass_g       nmi   all   0.443  nn        #>  7 bill_length_mm    year              nmi   all   0.0517 nn        #>  8 bill_depth_mm     year              nmi   all   0.0387 nn        #>  9 flipper_length_mm year              nmi   all   0.0707 nn        #> 10 body_mass_g       year              nmi   all   0.0445 nn        #> # ℹ 18 more rows pairwise_scores(penguins) |> distinct(score, pair_type) #> # A tibble: 3 × 2 #>   score   pair_type #>   <chr>   <chr>     #> 1 cancor  ff        #> 2 cancor  fn        #> 3 pearson nn pair_control() #> $nn #> [1] \"pair_cor\" #>  #> $fn #> [1] \"pair_cancor\" #>  #> $oo #> [1] \"pair_polychor\" #>  #> $ff #> [1] \"pair_cancor\" #>  #> $nnargs #> NULL #>  #> $fnargs #> NULL #>  #> $ooargs #> NULL #>  #> $ffargs #> NULL"},{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"calculating-multiple-measures","dir":"Articles","previous_headings":"","what":"Calculating multiple measures","title":"Calculating pairwise scores using bullseye.","text":"want instance compare distance correlation mutual information measures display, two pairwise data structures can combined: provide another function pair_multi calculates multiple association measures every variable pair dataset. default function combines results pair_cor, pair_dcor,pair_mine,pair_ace, pair_cancor,pair_nmi,pair_uncertainty, pair_chi, subset pair_ functions may supplied argument, second example .","code":"bind_rows(sc_dcor, sc_nmi) |> arrange(x,y) #> # A tibble: 38 × 6 #>    x             y                 score group value pair_type #>    <chr>         <chr>             <chr> <chr> <dbl> <chr>     #>  1 bill_depth_mm bill_length_mm    dcor  all   0.387 nn        #>  2 bill_depth_mm bill_length_mm    nmi   all   0.225 nn        #>  3 bill_depth_mm body_mass_g       dcor  all   0.614 nn        #>  4 bill_depth_mm body_mass_g       nmi   all   0.443 nn        #>  5 bill_depth_mm flipper_length_mm dcor  all   0.704 nn        #>  6 bill_depth_mm flipper_length_mm nmi   all   0.470 nn        #>  7 bill_depth_mm island            nmi   all   0.282 fn        #>  8 bill_depth_mm sex               nmi   all   0.356 fn        #>  9 bill_depth_mm species           nmi   all   0.493 fn        #> 10 bill_depth_mm year              dcor  all   0.112 nn        #> # ℹ 28 more rows pair_multi(penguins) #> # A tibble: 130 × 6 #>    x                 y                 score   group   value pair_type #>    <chr>             <chr>             <chr>   <chr>   <dbl> <chr>     #>  1 bill_depth_mm     bill_length_mm    pearson all   -0.235  nn        #>  2 bill_length_mm    flipper_length_mm pearson all    0.656  nn        #>  3 bill_depth_mm     flipper_length_mm pearson all   -0.584  nn        #>  4 body_mass_g       flipper_length_mm pearson all    0.871  nn        #>  5 bill_length_mm    body_mass_g       pearson all    0.595  nn        #>  6 bill_depth_mm     body_mass_g       pearson all   -0.472  nn        #>  7 bill_length_mm    year              pearson all    0.0545 nn        #>  8 bill_depth_mm     year              pearson all   -0.0604 nn        #>  9 flipper_length_mm year              pearson all    0.170  nn        #> 10 body_mass_g       year              pearson all    0.0422 nn        #> # ℹ 120 more rows dcor_nmi <- pair_multi(penguins, c(\"pair_dcor\", \"pair_nmi\"))"},{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"calculating-grouped-measures","dir":"Articles","previous_headings":"","what":"Calculating grouped measures","title":"Calculating pairwise scores using bullseye.","text":"pair_ functions, can wrapped using pairwise_by build score calculation level grouping variable. course, grouped scores calculated using dplyr machinery, bit work. Use argument ungrouped=FALSE suppress calculation ungrouped scores. pairwise_scores argument, provides pairwise scores levels grouping variable. column group now shows levels grouping variable, along “” ungrouped scores. Use ungrouped=FALSE suppress calculation ungrouped scores. want calculate different scores default, specify via control argument:","code":"pairwise_by(penguins, by=\"species\", pair_cor) #> # A tibble: 40 × 6 #>    x                 y                 score   group    value pair_type #>    <chr>             <chr>             <chr>   <fct>    <dbl> <chr>     #>  1 bill_depth_mm     bill_length_mm    pearson Adelie  0.391  nn        #>  2 bill_length_mm    flipper_length_mm pearson Adelie  0.326  nn        #>  3 bill_depth_mm     flipper_length_mm pearson Adelie  0.308  nn        #>  4 body_mass_g       flipper_length_mm pearson Adelie  0.468  nn        #>  5 bill_length_mm    body_mass_g       pearson Adelie  0.549  nn        #>  6 bill_depth_mm     body_mass_g       pearson Adelie  0.576  nn        #>  7 bill_length_mm    year              pearson Adelie  0.0254 nn        #>  8 bill_depth_mm     year              pearson Adelie -0.224  nn        #>  9 flipper_length_mm year              pearson Adelie  0.342  nn        #> 10 body_mass_g       year              pearson Adelie -0.0293 nn        #> # ℹ 30 more rows sc_sex <- pairwise_scores(penguins, by=\"species\") sc_sex |> distinct(group) #> # A tibble: 4 × 1 #>   group     #>   <fct>     #> 1 Adelie    #> 2 Chinstrap #> 3 Gentoo    #> 4 all pc <- pair_control(nn=\"pair_multi\", nnargs= c(\"pair_dcor\", \"pair_ace\"), fn=NULL, ff=NULL) sc_sex <- pairwise_scores(penguins, by=\"species\", control=pc, ungrouped=FALSE)"},{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"scagnostic-measures","dir":"Articles","previous_headings":"","what":"Scagnostic measures","title":"Calculating pairwise scores using bullseye.","text":"package scagnostics provides pairwise variable scores based graph-theoretic interestingness measures, numeric variable pairs . Note first two variables penguins data non-numeric ignored calculation. group-wise calculation:","code":"pair_scagnostics(penguins[,1:5], scagnostic=c(\"Stringy\", \"Clumpy\")) #> # A tibble: 6 × 6 #>   x              y                 score   group  value pair_type #>   <chr>          <chr>             <chr>   <chr>  <dbl> <chr>     #> 1 bill_depth_mm  bill_length_mm    Stringy all   0.331  nn        #> 2 bill_length_mm flipper_length_mm Stringy all   0.370  nn        #> 3 bill_depth_mm  flipper_length_mm Stringy all   0.378  nn        #> 4 bill_depth_mm  bill_length_mm    Clumpy  all   0.0328 nn        #> 5 bill_length_mm flipper_length_mm Clumpy  all   0.0388 nn        #> 6 bill_depth_mm  flipper_length_mm Clumpy  all   0.530  nn pairwise_by(penguins[,1:5], by=\"species\",function(x) pair_scagnostics(x, scagnostic=c(\"Stringy\", \"Clumpy\"))) #> # A tibble: 24 × 6 #>    x              y                 score   group      value pair_type #>    <chr>          <chr>             <chr>   <fct>      <dbl> <chr>     #>  1 bill_depth_mm  bill_length_mm    Stringy Adelie    0.278  nn        #>  2 bill_length_mm flipper_length_mm Stringy Adelie    0.413  nn        #>  3 bill_depth_mm  flipper_length_mm Stringy Adelie    0.392  nn        #>  4 bill_depth_mm  bill_length_mm    Clumpy  Adelie    0.0477 nn        #>  5 bill_length_mm flipper_length_mm Clumpy  Adelie    0.0372 nn        #>  6 bill_depth_mm  flipper_length_mm Clumpy  Adelie    0.0598 nn        #>  7 bill_depth_mm  bill_length_mm    Stringy Chinstrap 0.325  nn        #>  8 bill_length_mm flipper_length_mm Stringy Chinstrap 0.275  nn        #>  9 bill_depth_mm  flipper_length_mm Stringy Chinstrap 0.277  nn        #> 10 bill_depth_mm  bill_length_mm    Clumpy  Chinstrap 0.0758 nn        #> # ℹ 14 more rows"},{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"converting-symmetric-matrices-to-pairwise-and-vice-versa-","dir":"Articles","previous_headings":"","what":"Converting symmetric matrices to pairwise and vice-versa.","title":"Calculating pairwise scores using bullseye.","text":"conventional way representing pairwise scores correlations via numeric symmetric matrix. tidy pairwise structure use bullseye flexible, amenable multiple measures association grouped measures. straightforward convert symmetric matrix pairwise: reverse, converting pairwise symmetric matrix:","code":"x <- cor(penguins[, c(\"bill_length_mm\", \"bill_depth_mm\" ,\"flipper_length_mm\" ,\"body_mass_g\")],           use= \"pairwise.complete.obs\") pairwise(x, score=\"pearson\", pair_type = \"nn\") #> # A tibble: 6 × 6 #>   x              y                 score   group  value pair_type #>   <chr>          <chr>             <chr>   <chr>  <dbl> <chr>     #> 1 bill_depth_mm  bill_length_mm    pearson all   -0.235 nn        #> 2 bill_length_mm flipper_length_mm pearson all    0.656 nn        #> 3 bill_depth_mm  flipper_length_mm pearson all   -0.584 nn        #> 4 body_mass_g    flipper_length_mm pearson all    0.871 nn        #> 5 bill_length_mm body_mass_g       pearson all    0.595 nn        #> 6 bill_depth_mm  body_mass_g       pearson all   -0.472 nn as.matrix(sc_dcor) #>                   bill_depth_mm bill_length_mm body_mass_g flipper_length_mm #> bill_depth_mm         0.0000000     0.38720211   0.6141631         0.7039636 #> bill_length_mm        0.3872021     0.00000000   0.5871319         0.6664558 #> body_mass_g           0.6141631     0.58713186   0.0000000         0.8674122 #> flipper_length_mm     0.7039636     0.66645577   0.8674122         0.0000000 #> year                  0.1117057     0.07842516   0.0790560         0.1643876 #>                         year #> bill_depth_mm     0.11170568 #> bill_length_mm    0.07842516 #> body_mass_g       0.07905600 #> flipper_length_mm 0.16438763 #> year              0.00000000"},{"path":"https://cbhurley.github.io/bullseye/articles/calc_pairwise.html","id":"converting-structures-from-package-correlation","dir":"Articles","previous_headings":"Converting symmetric matrices to pairwise and vice-versa.","what":"Converting structures from package correlation:","title":"Calculating pairwise scores using bullseye.","text":"correlation package calculates different kinds correlations, partial correlations, Bayesian correlations, multilevel correlations, polychoric correlations, biweight, percentage bend Sheperd’s Pi correlations, distance correlation . output data structure tidy dataframe correlation value correlation tests variable pairs correlation method defined. default calculation uses Pearson correlation. options available via method argument. .matrix method provided results correlation::correlation, straightforward convert pairwise tibble.","code":"correlation::correlation(penguins) #> # Correlation Matrix (pearson-method) #>  #> Parameter1        |        Parameter2 |     r |         95% CI | t(340) |         p #> ----------------------------------------------------------------------------------- #> bill_length_mm    |     bill_depth_mm | -0.24 | [-0.33, -0.13] |  -4.46 | < .001*** #> bill_length_mm    | flipper_length_mm |  0.66 | [ 0.59,  0.71] |  16.03 | < .001*** #> bill_length_mm    |       body_mass_g |  0.60 | [ 0.52,  0.66] |  13.65 | < .001*** #> bill_length_mm    |              year |  0.05 | [-0.05,  0.16] |   1.01 | 0.797     #> bill_depth_mm     | flipper_length_mm | -0.58 | [-0.65, -0.51] | -13.26 | < .001*** #> bill_depth_mm     |       body_mass_g | -0.47 | [-0.55, -0.39] |  -9.87 | < .001*** #> bill_depth_mm     |              year | -0.06 | [-0.17,  0.05] |  -1.11 | 0.797     #> flipper_length_mm |       body_mass_g |  0.87 | [ 0.84,  0.89] |  32.72 | < .001*** #> flipper_length_mm |              year |  0.17 | [ 0.06,  0.27] |   3.17 | 0.007**   #> body_mass_g       |              year |  0.04 | [-0.06,  0.15] |   0.78 | 0.797     #>  #> p-value adjustment method: Holm (1979) #> Observations: 342 x <- correlation::correlation(penguins) pairwise(as.matrix(x))  #> # A tibble: 10 × 6 #>    x                 y                 score group   value pair_type #>    <chr>             <chr>             <chr> <chr>   <dbl> <chr>     #>  1 bill_depth_mm     bill_length_mm    NA    all   -0.235  NA        #>  2 bill_length_mm    flipper_length_mm NA    all    0.656  NA        #>  3 bill_depth_mm     flipper_length_mm NA    all   -0.584  NA        #>  4 body_mass_g       flipper_length_mm NA    all    0.871  NA        #>  5 bill_length_mm    body_mass_g       NA    all    0.595  NA        #>  6 bill_depth_mm     body_mass_g       NA    all   -0.472  NA        #>  7 bill_length_mm    year              NA    all    0.0545 NA        #>  8 bill_depth_mm     year              NA    all   -0.0604 NA        #>  9 flipper_length_mm year              NA    all    0.170  NA        #> 10 body_mass_g       year              NA    all    0.0422 NA"},{"path":"https://cbhurley.github.io/bullseye/articles/vis_pairwise.html","id":"visualising-associations","dir":"Articles","previous_headings":"","what":"Visualising associations","title":"Visualising pairwise scores using bullseye.","text":"usual starting point visualisation correlation numeric variables:  wish also include factor variables, use alternative pair_cor accepts numeric factor variables, eg pair_cancor. see available methods handle variable types use Alternatively, wish show different association measures correlation numeric variables cancor non numeric, plot result pairwise_scores: Adding interactive=TRUE means tooltips available. default variables plot re-ordered emphasize pairs maximum absolute scores. re-ordering uses hierarchical clustering place high score pairs adjacently, also push high score pairs top-left display.","code":"plot(pair_cor(peng)) filter(pair_methods,nn&ff&fn) #> # A tibble: 3 × 7 #>   name        nn    ff    fn    from                range comments #>   <chr>       <lgl> <lgl> <lgl> <chr>               <chr> <chr>    #> 1 pair_ace    TRUE  TRUE  TRUE  acepack::ace        [0,1] \"\"       #> 2 pair_cancor TRUE  TRUE  TRUE  cancor              [0,1] \"\"       #> 3 pair_nmi    TRUE  TRUE  TRUE  linkspotter::maxNMI [0,1] \"\" scores <- pairwise_scores(peng) plot(pairwise_scores(peng), interactive=TRUE)"},{"path":"https://cbhurley.github.io/bullseye/articles/vis_pairwise.html","id":"visualising-multiple-scores","dir":"Articles","previous_headings":"","what":"Visualising multiple scores","title":"Visualising pairwise scores using bullseye.","text":"pairwise structure multiple association scores (x,y) pair appears multiple times pairwise structure. bullseye plot shown pie wedge representing conditional correlations. overall ungrouped correlation shown pie center. multiple scores (x,y) pair ordering algorithm based maximum scores. alternative ordering algorithm gives emphasis pairs largest difference scores: Pairs numeric variables exhibit Simpsons paradox ungrouped correlation negative grouped corelations positive (vice-versa). present pairs (body_mass_mm, bill_depth_mm) (bill_depth_mm, bill_length_mm). island variable also associated penguin dimension variables. However, mostly two species (Gentoo Chinstrap) located one island . species, score values island variables NA, shown grey. Multiple pairwise scores also occur pairwise data structures combined: case various measures association fairly consistent. bill_depth variable ace correlations higher others, indicating presence non-linear association.","code":"scores <- pairwise_scores(peng, by=\"species\") plot(scores, interactive=TRUE) plot(scores, var_order=\"seriate_max_diff\", interactive=TRUE) mscores <-  bind_rows(   pair_cor(peng),   pair_cor(peng, method=\"spearman\"),   pair_dcor(peng),   pair_ace(peng) ) |> filter(pair_type==\"nn\") |>   mutate(value=abs(value)) # convert all scores to 0-1  plot(mscores, interactive=TRUE)"},{"path":"https://cbhurley.github.io/bullseye/articles/vis_pairwise.html","id":"visualising-multiple-scagnostic-scores","dir":"Articles","previous_headings":"","what":"Visualising multiple scagnostic scores","title":"Visualising pairwise scores using bullseye.","text":"many scores example scagnostics, alternative display perhaps easier read. offer alternative plot pairwise structure:  default ordering arranges variable pairs order maximum score. high-scoring pairs involve year, surprising year takes just three distinct values.  According scagnostic measures, pairwise scatterplots exhibit skewness, body_mass:flipper_length scores highly outlier measure.","code":"sc <- pair_scagnostics(peng) plot(sc, interactive=TRUE) plot(sc, type=\"linear\") sc |> filter(y != \"year\")|> plot(type=\"linear\", geom=\"point\", add_lines=TRUE)"},{"path":"https://cbhurley.github.io/bullseye/articles/vis_pairwise.html","id":"linear-display-for-filtered-pairwise-objects","dir":"Articles","previous_headings":"","what":"Linear display for filtered pairwise objects","title":"Visualising pairwise scores using bullseye.","text":"use American Community Survey (2012) R package openintro contains results US Census American Community Survey 2012. Variable description acs12 dataset scores contains various pairwise measures 78 variable pairs. Many scores low, pick pairs score .25 display: employment:income highest score, measured using ace, suggesting higher association transformed income. ave_cor function calls acepack::ace (handling factors missing) shows ace picks transformation compresses high income values. Similarly age:income high ace score, plot two variables shows income goes aage age 40 drops . Next, calculate scores race filter x,y pairs high differences:  Asians much higher association groups many variables. Employed Asians report much higher hours worked:  Asians, big difference travel time work genders compared races.  Asians, big difference income across genders compared races.  Asians work groups, Asian women commute less earn less.","code":"acs12 <- openintro::acs12  scores <- pair_multi(acs12) mutate(scores, valmax = max(abs(value)), .by=c(x,y))|>   filter(valmax > .25) |>   plot(type=\"linear\",geom=\"point\", interactive=TRUE) a <- ace_cor(acs12$income, acs12$employment) plot(a$x, a$tx) group_scores <- pairwise_scores(acs12, by = \"race\")  # filtering variable pairs with a range of 0.25 or greater rng <- function(vals){   if (all(is.na(vals))) 0 else max(vals, na.rm=TRUE)- min(vals,na.rm=TRUE) }  mutate(group_scores, valrange = rng(value),valmax = max(abs(value)), .by=c(x,y))|>   filter(valrange > .25 | valmax > .4) |>   plot(type=\"linear\", geom=\"point\", pair_order = \"seriate_max_diff\")+     theme(legend.text = element_text(size = rel(.5)), legend.title = element_text(size = rel(.5))   ) ggplot(data=acs12, aes(x=employment, y=hrs_work))+   geom_boxplot()+   facet_grid(rows=vars(race)) # NA col is because for employed=NA, there  hrs_work also NA ggplot(data=acs12, aes(x=gender, y=time_to_work))+   geom_boxplot()+   facet_grid(cols=vars(race)) ggplot(data=acs12, aes(x=gender, y=income))+   geom_boxplot()+   facet_grid(cols=vars(race))"},{"path":"https://cbhurley.github.io/bullseye/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Amit Chinwan. Author. Catherine Hurley. Author, maintainer.","code":""},{"path":"https://cbhurley.github.io/bullseye/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chinwan , Hurley C (2024). bullseye: Visualising multiple pairwise variable correlations scores. R package version 0.1.0, https://cbhurley.github.io/bullseye/.","code":"@Manual{,   title = {bullseye: Visualising multiple pairwise variable correlations and other scores},   author = {Amit Chinwan and Catherine Hurley},   year = {2024},   note = {R package version 0.1.0},   url = {https://cbhurley.github.io/bullseye/}, }"},{"path":"https://cbhurley.github.io/bullseye/index.html","id":"bullseye","dir":"","previous_headings":"","what":"Visualising multiple pairwise variable correlations and other scores","title":"Visualising multiple pairwise variable correlations and other scores","text":"goal bullseye provide tidy data structure visualisations multiple grouped variable correlations, general association measures pairwise scores suitable numerical, ordinal nominal variables.","code":""},{"path":"https://cbhurley.github.io/bullseye/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualising multiple pairwise variable correlations and other scores","text":"can install development version bullseye GitHub :","code":"# still in progress # install.packages(\"devtools\") # devtools::install_github(\"cbhurley/bullseye\")"},{"path":"https://cbhurley.github.io/bullseye/index.html","id":"build-a-pairwise-data-structure","dir":"","previous_headings":"","what":"Build a pairwise data structure","title":"Visualising multiple pairwise variable correlations and other scores","text":"calculates correlations every level species data. methods calculating pairwise variable scores see vignette “Calculating pairwise scores using bullseye”.","code":"library(bullseye) irisc <- pairwise_scores(iris, by = \"Species\")  irisc #> # A tibble: 24 × 6 #>    x            y            score   group      value pair_type #>    <chr>        <chr>        <chr>   <fct>      <dbl> <chr>     #>  1 Petal.Length Sepal.Length pearson setosa     0.267 nn        #>  2 Petal.Width  Sepal.Length pearson setosa     0.278 nn        #>  3 Sepal.Length Sepal.Width  pearson setosa     0.743 nn        #>  4 Petal.Length Sepal.Width  pearson setosa     0.178 nn        #>  5 Petal.Width  Sepal.Width  pearson setosa     0.233 nn        #>  6 Petal.Length Petal.Width  pearson setosa     0.332 nn        #>  7 Petal.Length Sepal.Length pearson versicolor 0.754 nn        #>  8 Petal.Width  Sepal.Length pearson versicolor 0.546 nn        #>  9 Sepal.Length Sepal.Width  pearson versicolor 0.526 nn        #> 10 Petal.Length Sepal.Width  pearson versicolor 0.561 nn        #> # ℹ 14 more rows"},{"path":"https://cbhurley.github.io/bullseye/index.html","id":"visualise-the-correlations","dir":"","previous_headings":"","what":"Visualise the correlations","title":"Visualising multiple pairwise variable correlations and other scores","text":"glyph shows overall ungrouped correlation center, grouped correlations wedges. setosa, versicolor, virginica starting top going anti-clockwise. Use see groups represented wedges. ungrouped Pearson correlation Sepal.Width three variables negative, correlations Species positive. second visualisation offered also:  visualisation examples see vignette “Visualising pairwise scores using bullseye”.","code":"plot_pairwise(irisc) plot_pairwise(irisc, interactive=TRUE) plot_pairwise_linear(irisc)"},{"path":"https://cbhurley.github.io/bullseye/reference/ace_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","title":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","text":"Calculates ace based transformations correlation, handling missing values factors.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/ace_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","text":"","code":"ace_cor(x, y, handle.na = TRUE)"},{"path":"https://cbhurley.github.io/bullseye/reference/ace_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","text":"x numeric vector factor y numeric vector factor handle.na TRUE uses pairwise complete observations.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/ace_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","text":"result acepack::ace","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/ace_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates ace based transformations and correlation, handling missing values and factors. — ace_cor","text":"","code":"ace_cor(iris$Sepal.Length, iris$Species) #> $p #> [1] 1 #>  #> $n #> [1] 150 #>  #> $x #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14] #> [1,]  5.1  4.9  4.7  4.6    5  5.4  4.6    5  4.4   4.9   5.4   4.8   4.8   4.3 #>      [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26] #> [1,]   5.8   5.7   5.4   5.1   5.7   5.1   5.4   5.1   4.6   5.1   4.8     5 #>      [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38] #> [1,]     5   5.2   5.2   4.7   4.8   5.4   5.2   5.5   4.9     5   5.5   4.9 #>      [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50] #> [1,]   4.4   5.1     5   4.5   4.4     5   5.1   4.8   5.1   4.6   5.3     5 #>      [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62] #> [1,]     7   6.4   6.9   5.5   6.5   5.7   6.3   4.9   6.6   5.2     5   5.9 #>      [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74] #> [1,]     6   6.1   5.6   6.7   5.6   5.8   6.2   5.6   5.9   6.1   6.3   6.1 #>      [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86] #> [1,]   6.4   6.6   6.8   6.7     6   5.7   5.5   5.5   5.8     6   5.4     6 #>      [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98] #> [1,]   6.7   6.3   5.6   5.5   5.5   6.1   5.8     5   5.6   5.7   5.7   6.2 #>      [,99] [,100] [,101] [,102] [,103] [,104] [,105] [,106] [,107] [,108] #> [1,]   5.1    5.7    6.3    5.8    7.1    6.3    6.5    7.6    4.9    7.3 #>      [,109] [,110] [,111] [,112] [,113] [,114] [,115] [,116] [,117] [,118] #> [1,]    6.7    7.2    6.5    6.4    6.8    5.7    5.8    6.4    6.5    7.7 #>      [,119] [,120] [,121] [,122] [,123] [,124] [,125] [,126] [,127] [,128] #> [1,]    7.7      6    6.9    5.6    7.7    6.3    6.7    7.2    6.2    6.1 #>      [,129] [,130] [,131] [,132] [,133] [,134] [,135] [,136] [,137] [,138] #> [1,]    6.4    7.2    7.4    7.9    6.4    6.3    6.1    7.7    6.3    6.4 #>      [,139] [,140] [,141] [,142] [,143] [,144] [,145] [,146] [,147] [,148] #> [1,]      6    6.9    6.7    6.9    5.8    6.8    6.7    6.7    6.3    6.5 #>      [,149] [,150] #> [1,]    6.2    5.9 #>  #> $y #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 #>  [75] 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 #> [112] 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 #> [149] 3 3 #>  #> $w #>   [1] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [38] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #>  [75] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [112] 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 #> [149] 1 1 #>  #> $l #> [1] 1 5 #>  #> $delrsq #> [1] 0.01 #>  #> $ns #> [1] 1 #>  #> $tx #>               [,1] #>   [1,] -0.99612767 #>   [2,] -1.03490874 #>   [3,] -1.18676782 #>   [4,] -1.25337475 #>   [5,] -0.96520326 #>   [6,] -0.49291631 #>   [7,] -1.25337475 #>   [8,] -0.96520326 #>   [9,] -1.32627802 #>  [10,] -1.03490874 #>  [11,] -0.49291631 #>  [12,] -1.11421374 #>  [13,] -1.11421374 #>  [14,] -1.35640999 #>  [15,]  0.21740316 #>  [16,]  0.12248628 #>  [17,] -0.49291631 #>  [18,] -0.99612767 #>  [19,]  0.12248628 #>  [20,] -0.99612767 #>  [21,] -0.49291631 #>  [22,] -0.99612767 #>  [23,] -1.25337475 #>  [24,] -0.99612767 #>  [25,] -1.11421374 #>  [26,] -0.96520326 #>  [27,] -0.96520326 #>  [28,] -0.89523436 #>  [29,] -0.89523436 #>  [30,] -1.18676782 #>  [31,] -1.11421374 #>  [32,] -0.49291631 #>  [33,] -0.89523436 #>  [34,] -0.28236937 #>  [35,] -1.03490874 #>  [36,] -0.96520326 #>  [37,] -0.28236937 #>  [38,] -1.03490874 #>  [39,] -1.32627802 #>  [40,] -0.99612767 #>  [41,] -0.96520326 #>  [42,] -1.29614606 #>  [43,] -1.32627802 #>  [44,] -0.96520326 #>  [45,] -0.99612767 #>  [46,] -1.11421374 #>  [47,] -0.99612767 #>  [48,] -1.25337475 #>  [49,] -0.71575517 #>  [50,] -0.96520326 #>  [51,]  0.90010010 #>  [52,]  0.72099017 #>  [53,]  0.87004482 #>  [54,] -0.28236937 #>  [55,]  0.75355995 #>  [56,]  0.12248628 #>  [57,]  0.65565164 #>  [58,] -1.03490874 #>  [59,]  0.78200310 #>  [60,] -0.89523436 #>  [61,] -0.96520326 #>  [62,]  0.33227956 #>  [63,]  0.45059983 #>  [64,]  0.56008131 #>  [65,] -0.09036787 #>  [66,]  0.80989548 #>  [67,] -0.09036787 #>  [68,]  0.21740316 #>  [69,]  0.61581912 #>  [70,] -0.09036787 #>  [71,]  0.33227956 #>  [72,]  0.56008131 #>  [73,]  0.65565164 #>  [74,]  0.56008131 #>  [75,]  0.72099017 #>  [76,]  0.78200310 #>  [77,]  0.83993012 #>  [78,]  0.80989548 #>  [79,]  0.45059983 #>  [80,]  0.12248628 #>  [81,] -0.28236937 #>  [82,] -0.28236937 #>  [83,]  0.21740316 #>  [84,]  0.45059983 #>  [85,] -0.49291631 #>  [86,]  0.45059983 #>  [87,]  0.80989548 #>  [88,]  0.65565164 #>  [89,] -0.09036787 #>  [90,] -0.28236937 #>  [91,] -0.28236937 #>  [92,]  0.56008131 #>  [93,]  0.21740316 #>  [94,] -0.96520326 #>  [95,] -0.09036787 #>  [96,]  0.12248628 #>  [97,]  0.12248628 #>  [98,]  0.61581912 #>  [99,] -0.99612767 #> [100,]  0.12248628 #> [101,]  0.65565164 #> [102,]  0.21740316 #> [103,]  0.92998009 #> [104,]  0.65565164 #> [105,]  0.75355995 #> [106,]  1.07938007 #> [107,] -1.03490874 #> [108,]  0.98974008 #> [109,]  0.80989548 #> [110,]  0.95986009 #> [111,]  0.75355995 #> [112,]  0.72099017 #> [113,]  0.83993012 #> [114,]  0.12248628 #> [115,]  0.21740316 #> [116,]  0.72099017 #> [117,]  0.75355995 #> [118,]  1.10926007 #> [119,]  1.10926007 #> [120,]  0.45059983 #> [121,]  0.87004482 #> [122,] -0.09036787 #> [123,]  1.10926007 #> [124,]  0.65565164 #> [125,]  0.80989548 #> [126,]  0.95986009 #> [127,]  0.61581912 #> [128,]  0.56008131 #> [129,]  0.72099017 #> [130,]  0.95986009 #> [131,]  1.01962008 #> [132,]  1.16902006 #> [133,]  0.72099017 #> [134,]  0.65565164 #> [135,]  0.56008131 #> [136,]  1.10926007 #> [137,]  0.65565164 #> [138,]  0.72099017 #> [139,]  0.45059983 #> [140,]  0.87004482 #> [141,]  0.80989548 #> [142,]  0.87004482 #> [143,]  0.21740316 #> [144,]  0.83993012 #> [145,]  0.80989548 #> [146,]  0.80989548 #> [147,]  0.65565164 #> [148,]  0.75355995 #> [149,]  0.61581912 #> [150,]  0.33227956 #>  #> $ty #>   [1] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>   [7] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [13] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [19] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [25] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [31] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [37] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [43] -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 -1.3531860 #>  [49] -1.3531860 -1.3531860  0.3206916  0.3206916  0.3206916  0.3206916 #>  [55]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [61]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [67]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [73]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [79]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [85]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [91]  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916  0.3206916 #>  [97]  0.3206916  0.3206916  0.3206916  0.3206916  1.0324944  1.0324944 #> [103]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [109]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [115]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [121]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [127]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [133]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [139]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #> [145]  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944  1.0324944 #>  #> $rsq #> [1] 0.7027773 #>  #> $ierr #> [1] 0 #>  #> $m #>   [1]  14   9  39  43  42  23  48   7   4  30   3  31  12  13  25  46  35  38 #>  [19] 107   2  58  10  50  94   8   5  27  26  61  44  36  41  40  99  45  47 #>  [37]   1  22  18  24  20  33  29  28  60  49   6  17  21  32  11  85  91  37 #>  [55]  90  54  82  81  34  89 122  70  95  67  65  96  97  19 114  56  16  80 #>  [73] 100  93  15 115  83 143  68 102  71 150  62  63  79 139  84 120  86 135 #>  [91] 128  64  72  92  74  69 149  98 127 124 147  57 104 134 101  88  73 137 #> [109] 133 129 138  52 116  75 112  55 105 117 148 111  76  59 146  66  87  78 #> [127] 141 109 145 125 144  77 113 142 140 121  53  51 103 130 126 110 108 131 #> [145] 106 118 119 123 136 132   1  34  35  36  37  33  32  31  30  29  28  38 #> [163]  39  40  50  49  48  47  46  45  44  43  42  41  27  26  25  11  10   9 #> [181]   8   7   6   5   4   3   2  12  13  14  24  23  22  21  20  19  18  17 #> [199]  16  15  87  86  85  84  83  82  81  80  79  78  77  88  89 100  99  98 #> [217]  97  96  95  94  93  92  91  90  76  75  61  60  59  58  57  56  55  54 #> [235]  53  52  51  62  63  74  73  72  71  70  69  68  67  66  65  64 136 135 #> [253] 134 133 132 131 130 129 128 127 137 138 139 149 148 147 146 145 144 143 #> [271] 142 141 140 126 125 124 110 109 108 107 106 105 104 103 102 101 111 112 #> [289] 113 123 122 121 120 119 118 117 116 115 114 150 #>  #> $z #>               [,1]        [,2]       [,3] [,4]         [,5]        [,6] #>   [1,] -0.99612767 -0.99612767 -0.9077636    1 -0.355757411 -1.35188508 #>   [2,] -0.28236937 -1.03490874 -0.9077636    1 -0.316976338 -1.35188508 #>   [3,] -1.03490874 -1.18676782 -0.9077636    1 -0.165117256 -1.35188508 #>   [4,] -0.96520326 -1.25337475 -0.9077636    1 -0.098510330 -1.35188508 #>   [5,] -0.28236937 -0.96520326 -0.9077636    1 -0.386681821 -1.35188508 #>   [6,] -0.89523436 -0.49291631 -0.9077636    1 -0.858968772 -1.35188508 #>   [7,] -0.49291631 -1.25337475 -0.9077636    1 -0.098510330 -1.35188508 #>   [8,] -1.11421374 -0.96520326 -0.9077636    1 -0.386681821 -1.35188508 #>   [9,] -1.18676782 -1.32627802 -0.9077636    1 -0.025607054 -1.35188508 #>  [10,] -0.89523436 -1.03490874 -0.9077636    1 -0.316976338 -1.35188508 #>  [11,] -0.89523436 -0.49291631 -0.9077636    1 -0.858968772 -1.35188508 #>  [12,] -1.03490874 -1.11421374 -0.9077636    1 -0.237671333 -1.32204236 #>  [13,] -1.32627802 -1.11421374 -0.9077636    1 -0.237671333 -1.32204236 #>  [14,] -0.99612767 -1.35640999 -0.9077636    1  0.004524912 -1.32204236 #>  [15,] -0.96520326  0.21740316 -0.9077636    1 -1.569288234 -1.32204236 #>  [16,] -0.71575517  0.12248628 -0.9077636    1 -1.474371355 -1.32204236 #>  [17,] -1.25337475 -0.49291631 -0.9077636    1 -0.858968772 -0.67881948 #>  [18,] -0.99612767 -0.99612767 -0.9077636    1 -0.355757411 -0.67881948 #>  [19,] -1.11421374  0.12248628 -0.9077636    1 -1.474371355 -0.67881948 #>  [20,] -0.99612767 -0.99612767 -0.9077636    1 -0.355757411 -0.67881948 #>  [21,] -0.96520326 -0.49291631 -0.9077636    1 -0.858968772 -0.67881948 #>  [22,] -1.32627802 -0.99612767 -0.9077636    1 -0.355757411 -0.67881948 #>  [23,] -1.29614606 -1.25337475 -0.9077636    1 -0.098510330 -1.02134897 #>  [24,] -0.96520326 -0.99612767 -0.9077636    1 -0.355757411 -1.02134897 #>  [25,] -0.96520326 -1.11421374 -0.9077636    1 -0.237671333 -1.02134897 #>  [26,] -0.96520326 -0.96520326 -0.9077636    1 -0.386681821 -1.02134897 #>  [27,] -1.11421374 -0.96520326 -0.9077636    1 -0.386681821 -1.02134897 #>  [28,] -0.49291631 -0.89523436 -0.9077636    1 -0.456650716 -1.02134897 #>  [29,] -1.03490874 -0.89523436 -0.9077636    1 -0.456650716 -1.02134897 #>  [30,] -1.32627802 -1.18676782 -0.9077636    1 -0.165117256 -1.02134897 #>  [31,] -0.96520326 -1.11421374 -0.9077636    1 -0.237671333 -1.02134897 #>  [32,] -1.25337475 -0.49291631 -0.9077636    1 -0.858968772 -1.02134897 #>  [33,] -0.49291631 -0.89523436 -0.9077636    1 -0.456650716 -1.19050443 #>  [34,] -0.96520326 -0.28236937 -0.9077636    1 -1.069515712 -1.19050443 #>  [35,] -1.25337475 -1.03490874 -0.9077636    1 -0.316976338 -1.19050443 #>  [36,] -1.18676782 -0.96520326 -0.9077636    1 -0.386681821 -1.19050443 #>  [37,] -1.03490874 -0.28236937 -0.9077636    1 -1.069515712 -1.19050443 #>  [38,] -1.11421374 -1.03490874 -0.9077636    1 -0.316976338 -1.19050443 #>  [39,] -1.11421374 -1.32627802 -0.9077636    1 -0.025607054 -1.19050443 #>  [40,] -1.35640999 -0.99612767 -0.9077636    1 -0.355757411 -1.19050443 #>  [41,] -0.99612767 -0.96520326 -0.9077636    1 -0.386681821 -1.19050443 #>  [42,] -1.25337475 -1.29614606 -0.9077636    1 -0.055739021 -1.13177041 #>  [43,] -0.99612767 -1.32627802 -0.9077636    1 -0.025607054 -1.13177041 #>  [44,] -0.49291631 -0.96520326 -0.9077636    1 -0.386681821 -1.13177041 #>  [45,] -0.99612767 -0.99612767 -0.9077636    1 -0.355757411 -1.13177041 #>  [46,]  0.12248628 -1.11421374 -0.9077636    1 -0.237671333 -1.16652536 #>  [47,] -0.99612767 -0.99612767 -0.9077636    1 -0.355757411 -1.07186429 #>  [48,] -0.49291631 -1.25337475 -0.9077636    1 -0.098510330 -1.07186429 #>  [49,]  0.12248628 -0.71575517 -0.9077636    1 -0.636129907 -1.07186429 #>  [50,]  0.21740316 -0.96520326 -0.9077636    1 -0.386681821 -1.07186429 #>  [51,]  0.80989548  0.90010010  0.2151309    1 -0.583747675 -1.07186429 #>  [52,]  0.45059983  0.72099017  0.2151309    1 -0.404637754 -1.07186429 #>  [53,] -0.49291631  0.87004482  0.2151309    1 -0.553692404 -0.08727783 #>  [54,]  0.45059983 -0.28236937  0.2151309    1  0.598721786 -0.08727783 #>  [55,]  0.21740316  0.75355995  0.2151309    1 -0.437207525 -0.08727783 #>  [56,] -0.28236937  0.12248628  0.2151309    1  0.193866143 -0.08727783 #>  [57,] -0.28236937  0.65565164  0.2151309    1 -0.339299220 -0.08727783 #>  [58,]  0.12248628 -1.03490874  0.2151309    1  1.351261160 -0.08727783 #>  [59,]  0.45059983  0.78200310  0.2151309    1 -0.465650677 -0.08727783 #>  [60,]  0.80989548 -0.89523436  0.2151309    1  1.211586782  0.36775002 #>  [61,]  0.83993012 -0.96520326  0.2151309    1  1.281555677  0.36775002 #>  [62,]  0.65565164  0.33227956  0.2151309    1 -0.015927139  0.36775002 #>  [63,] -0.09036787  0.45059983  0.2151309    1 -0.134247405  0.36775002 #>  [64,]  0.12248628  0.56008131  0.2151309    1 -0.243728890  0.36775002 #>  [65,] -0.99612767 -0.09036787  0.2151309    1  0.406720289  0.36775002 #>  [66,]  0.61581912  0.80989548  0.2151309    1 -0.493543057 -0.01541966 #>  [67,]  0.12248628 -0.09036787  0.2151309    1  0.406720289 -0.01541966 #>  [68,]  0.12248628  0.21740316  0.2151309    1  0.098949264 -0.01541966 #>  [69,] -0.09036787  0.61581912  0.2151309    1 -0.299466697 -0.01541966 #>  [70,] -0.96520326 -0.09036787  0.2151309    1  0.406720289 -0.01541966 #>  [71,]  0.21740316  0.33227956  0.2151309    1 -0.015927139 -0.01541966 #>  [72,]  0.56008131  0.56008131  0.2151309    1 -0.243728890 -0.01541966 #>  [73,] -0.28236937  0.65565164  0.2151309    1 -0.339299220 -0.01541966 #>  [74,] -0.28236937  0.56008131  0.2151309    1 -0.243728890  0.40588435 #>  [75,]  0.78200310  0.72099017  0.2151309    1 -0.404637754  0.40588435 #>  [76,]  0.72099017  0.78200310  0.2151309    1 -0.465650677  0.40588435 #>  [77,] -0.96520326  0.83993012  0.2151309    1 -0.523577695  0.40588435 #>  [78,] -0.89523436  0.80989548  0.2151309    1 -0.493543057  0.40588435 #>  [79,]  0.78200310  0.45059983  0.2151309    1 -0.134247405  0.40588435 #>  [80,] -1.03490874  0.12248628  0.2151309    1  0.193866143  0.40588435 #>  [81,]  0.65565164 -0.28236937  0.2151309    1  0.598721786  0.57632276 #>  [82,]  0.12248628 -0.28236937  0.2151309    1  0.598721786  0.57632276 #>  [83,]  0.75355995  0.21740316  0.2151309    1  0.098949264  0.57632276 #>  [84,] -0.28236937  0.45059983  0.2151309    1 -0.134247405  0.58663543 #>  [85,]  0.87004482 -0.49291631  0.2151309    1  0.809268726  0.58663543 #>  [86,]  0.72099017  0.45059983  0.2151309    1 -0.134247405  0.58663543 #>  [87,]  0.90010010  0.80989548  0.2151309    1 -0.493543057  0.58663543 #>  [88,]  0.33227956  0.65565164  0.2151309    1 -0.339299220  0.58663543 #>  [89,]  0.45059983 -0.09036787  0.2151309    1  0.406720289  0.58663543 #>  [90,]  0.56008131 -0.28236937  0.2151309    1  0.598721786  0.54194143 #>  [91,]  0.65565164 -0.28236937  0.2151309    1  0.598721786  0.54194143 #>  [92,]  0.56008131  0.56008131  0.2151309    1 -0.243728890  0.54194143 #>  [93,]  0.33227956  0.21740316  0.2151309    1  0.098949264  0.54194143 #>  [94,] -0.09036787 -0.96520326  0.2151309    1  1.281555677  0.54194143 #>  [95,]  0.61581912 -0.09036787  0.2151309    1  0.406720289  0.54194143 #>  [96,]  0.21740316  0.12248628  0.2151309    1  0.193866143  0.64960892 #>  [97,] -0.09036787  0.12248628  0.2151309    1  0.193866143  0.64960892 #>  [98,]  0.80989548  0.61581912  0.2151309    1 -0.299466697  0.64960892 #>  [99,] -0.09036787 -0.99612767  0.2151309    1  1.312480087  0.64960892 #> [100,]  0.56008131  0.12248628  0.2151309    1  0.193866143  0.80398706 #> [101,]  1.10926007  0.65565164  0.6926327    1  0.379881016  0.80398706 #> [102,]  0.56008131  0.21740316  0.6926327    1  0.818129500  0.80398706 #> [103,]  0.65565164  0.92998009  0.6926327    1  0.105552565  0.80398706 #> [104,]  0.72099017  0.65565164  0.6926327    1  0.379881016  0.80398706 #> [105,]  1.16902006  0.75355995  0.6926327    1  0.281972711  0.80398706 #> [106,]  1.01962008  1.07938007  0.6926327    1 -0.043847417  0.80398706 #> [107,]  0.95986009 -1.03490874  0.6926327    1  2.070441396  0.80398706 #> [108,]  0.72099017  0.98974008  0.6926327    1  0.045792572  0.80398706 #> [109,]  0.56008131  0.80989548  0.6926327    1  0.225637180  0.81244001 #> [110,]  0.61581912  0.95986009  0.6926327    1  0.075672569  0.81244001 #> [111,]  0.65565164  0.75355995  0.6926327    1  0.281972711  0.81244001 #> [112,]  0.72099017  0.72099017  0.6926327    1  0.314542482  0.81244001 #> [113,]  0.45059983  0.83993012  0.6926327    1  0.195602541  0.81244001 #> [114,]  0.61581912  0.12248628  0.6926327    1  0.913046380  0.81244001 #> [115,]  0.75355995  0.21740316  0.6926327    1  0.818129500  0.81244001 #> [116,]  0.65565164  0.72099017  0.6926327    1  0.314542482  0.80632725 #> [117,]  0.80989548  0.75355995  0.6926327    1  0.281972711  0.80632725 #> [118,]  0.80989548  1.10926007  0.6926327    1 -0.073727413  0.80632725 #> [119,]  0.83993012  1.10926007  0.6926327    1 -0.073727413  0.80632725 #> [120,]  0.21740316  0.45059983  0.6926327    1  0.584932832  0.80632725 #> [121,]  0.87004482  0.87004482  0.6926327    1  0.165487832  0.67594254 #> [122,]  0.80989548 -0.09036787  0.6926327    1  1.125900526  0.67594254 #> [123,]  0.87004482  1.10926007  0.6926327    1 -0.073727413  0.72448996 #> [124,]  0.95986009  0.65565164  0.6926327    1  0.379881016  0.72448996 #> [125,]  0.80989548  0.80989548  0.6926327    1  0.225637180  0.72448996 #> [126,]  0.65565164  0.95986009  0.6926327    1  0.075672569  0.72448996 #> [127,]  0.95986009  0.61581912  0.6926327    1  0.419713539  0.72448996 #> [128,]  0.80989548  0.56008131  0.6926327    1  0.475451347  0.72448996 #> [129,]  0.98974008  0.72099017  0.6926327    1  0.314542482  0.72448996 #> [130,] -1.03490874  0.95986009  0.6926327    1  0.075672569  0.72448996 #> [131,]  1.07938007  1.01962008  0.6926327    1  0.015912576  0.93218379 #> [132,]  0.75355995  1.16902006  0.6926327    1 -0.133487406  0.93218379 #> [133,]  0.65565164  0.72099017  0.6926327    1  0.314542482  0.93218379 #> [134,]  0.92998009  0.65565164  0.6926327    1  0.379881016  0.78380831 #> [135,]  0.21740316  0.56008131  0.6926327    1  0.475451347  0.78380831 #> [136,]  0.65565164  1.10926007  0.6926327    1 -0.073727413  0.78380831 #> [137,]  0.75355995  0.65565164  0.6926327    1  0.379881016  0.78380831 #> [138,]  0.72099017  0.72099017  0.6926327    1  0.314542482  0.85074329 #> [139,]  0.83993012  0.45059983  0.6926327    1  0.584932832  0.89660011 #> [140,]  1.10926007  0.87004482  0.6926327    1  0.165487832  0.90565744 #> [141,] -0.09036787  0.80989548  0.6926327    1  0.225637180  0.90565744 #> [142,]  0.87004482  0.87004482  0.6926327    1  0.165487832  0.90565744 #> [143,]  0.45059983  0.21740316  0.6926327    1  0.818129500  1.03553266 #> [144,]  1.10926007  0.83993012  0.6926327    1  0.195602541  1.03553266 #> [145,]  1.10926007  0.80989548  0.6926327    1  0.225637180  1.03553266 #> [146,]  0.75355995  0.80989548  0.6926327    1  0.225637180  1.03553266 #> [147,]  0.72099017  0.65565164  0.6926327    1  0.379881016  1.03553266 #> [148,]  0.21740316  0.75355995  0.6926327    1  0.281972711  1.03553266 #> [149,]  0.12248628  0.61581912  0.6926327    1  0.419713539  1.03553266 #> [150,]  0.33227956  0.33227956  0.6926327    1  0.703253097  1.03553266 #>             [,7]        [,8]       [,9]       [,10]       [,11]        [,12] #>   [1,] 0.0500000 -1.52839529 -1.3518851 -1.80787338  0.08488197   0.05000000 #>   [2,] 0.0500000 -1.44206008 -1.3518851 -1.68468312  0.15581024   0.05000000 #>   [3,] 0.0500000 -1.44206008 -1.3518851 -1.68468312  0.15581024   0.05000000 #>   [4,] 0.0500000 -1.44206008 -1.3518851 -1.68468312  0.15581024   0.05000000 #>   [5,] 0.1158917 -1.35572486 -1.3535718 -1.56149286  0.22673852   0.05000000 #>   [6,] 0.1843083 -1.26938965 -1.2780196 -1.43830261  0.29766679   0.06334044 #>   [7,] 0.1843083 -1.26938965 -1.2780196 -1.43830261  0.29766679   0.06334044 #>   [8,] 0.1843083 -1.26938965 -1.2780196 -1.43830261  0.29766679   0.06334044 #>   [9,] 0.1843083 -1.26938965 -1.2780196 -1.43830261  0.29766679   0.06334044 #>  [10,] 0.2527249 -1.18305444 -1.2062636 -1.31511235  0.36859507   0.21842166 #>  [11,] 0.2527249 -1.18305444 -1.2062636 -1.31511235  0.36859507   0.21842166 #>  [12,] 0.3211416 -1.09671922 -1.1351626 -1.19192210  0.43952334   0.44774905 #>  [13,] 0.3211416 -1.09671922 -1.1351626 -1.19192210  0.43952334   0.44774905 #>  [14,] 0.3211416 -1.09671922 -1.1351626 -1.19192210  0.43952334   0.44774905 #>  [15,] 0.3211416 -1.09671922 -1.1351626 -1.19192210  0.43952334   0.44774905 #>  [16,] 0.3211416 -1.09671922 -1.1351626 -1.19192210  0.43952334   0.44774905 #>  [17,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [18,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [19,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [20,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [21,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [22,] 0.3565608 -1.03800622 -1.0540410 -1.06873184  0.49678327   0.50000000 #>  [23,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [24,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [25,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [26,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [27,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [28,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [29,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [30,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [31,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [32,] 0.3436970 -1.02118505 -0.9849526 -0.94554159  0.60239754   0.37399312 #>  [33,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [34,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [35,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [36,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [37,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [38,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [39,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [40,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [41,] 0.2651767 -1.06931755 -1.0158770 -0.82333754  0.66124572   0.19899248 #>  [42,] 0.2144485 -0.96416432 -0.9513637 -0.69837931  0.68323186   0.14791147 #>  [43,] 0.2144485 -0.96416432 -0.9513637 -0.69837931  0.68323186   0.14791147 #>  [44,] 0.2144485 -0.96416432 -0.9513637 -0.69837931  0.68323186   0.14791147 #>  [45,] 0.2144485 -0.96416432 -0.9513637 -0.69837931  0.68323186   0.14791147 #>  [46,] 0.1982661 -0.77490422 -0.7794311 -0.55595565  0.72597347   0.15034102 #>  [47,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [48,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [49,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [50,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [51,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [52,] 0.2087562 -0.51181428 -0.5086637 -0.40387003  0.72127990   0.12950576 #>  [53,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [54,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [55,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [56,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [57,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [58,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [59,] 0.2459444 -0.30970893 -0.3018605 -0.25846160  0.73757831   0.20614326 #>  [60,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [61,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [62,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [63,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [64,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [65,] 0.2883603 -0.09253349 -0.1113235 -0.15632928  0.72126316   0.32629084 #>  [66,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [67,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [68,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [69,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [70,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [71,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [72,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [73,] 0.3437503  0.21587446  0.1027369 -0.02023811  0.62617684   0.38458092 #>  [74,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [75,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [76,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [77,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [78,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [79,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [80,] 0.3865413  0.32450776  0.1975222  0.12028675  0.54685119   0.35961228 #>  [81,] 0.4133837  0.36674214  0.3087894  0.28526538  0.49643121   0.42363020 #>  [82,] 0.4133837  0.36674214  0.3087894  0.28526538  0.49643121   0.42363020 #>  [83,] 0.4133837  0.36674214  0.3087894  0.28526538  0.49643121   0.42363020 #>  [84,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [85,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [86,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [87,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [88,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [89,] 0.4341305  0.53110802  0.4315865  0.40358743  0.41471282   0.43610155 #>  [90,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [91,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [92,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [93,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [94,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [95,] 0.4552605  0.65776757  0.5429901  0.52287303  0.36368218   0.46597685 #>  [96,] 0.4660413  0.69977770  0.6025609  0.59015174  0.34128537   0.50000000 #>  [97,] 0.4660413  0.69977770  0.6025609  0.59015174  0.34128537   0.50000000 #>  [98,] 0.4660413  0.69977770  0.6025609  0.59015174  0.34128537   0.50000000 #>  [99,] 0.4660413  0.69977770  0.6025609  0.59015174  0.34128537   0.50000000 #> [100,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [101,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [102,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [103,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [104,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [105,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [106,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [107,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [108,] 0.4703518  0.73411124  0.6359023  0.62513220  0.35425349   0.48691977 #> [109,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [110,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [111,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [112,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [113,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [114,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [115,] 0.4757503  0.76560629  0.7017687  0.69615473  0.37030694   0.43837168 #> [116,] 0.4765942  0.77494070  0.7343828  0.73095078  0.35489215   0.47205745 #> [117,] 0.4765942  0.77494070  0.7343828  0.73095078  0.35489215   0.47205745 #> [118,] 0.4765942  0.77494070  0.7343828  0.73095078  0.35489215   0.47205745 #> [119,] 0.4765942  0.77494070  0.7343828  0.73095078  0.35489215   0.47205745 #> [120,] 0.4765942  0.77494070  0.7343828  0.73095078  0.35489215   0.47205745 #> [121,] 0.4811323  0.78260915  0.7622005  0.76083078  0.33539482   0.50000000 #> [122,] 0.4811323  0.78260915  0.7622005  0.76083078  0.33539482   0.50000000 #> [123,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [124,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [125,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [126,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [127,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [128,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [129,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [130,] 0.4866176  0.77826900  0.7901558  0.79071077  0.32803592   0.50000000 #> [131,] 0.4771298  0.81200095  0.8199359  0.82059077  0.29830513   0.50000000 #> [132,] 0.4771298  0.81200095  0.8199359  0.82059077  0.29830513   0.50000000 #> [133,] 0.4771298  0.81200095  0.8199359  0.82059077  0.29830513   0.50000000 #> [134,] 0.5000000  0.81048963  0.8504708  0.85047076  0.27824281   0.50000000 #> [135,] 0.5000000  0.81048963  0.8504708  0.85047076  0.27824281   0.50000000 #> [136,] 0.5000000  0.81048963  0.8504708  0.85047076  0.27824281   0.50000000 #> [137,] 0.5000000  0.81048963  0.8504708  0.85047076  0.27824281   0.50000000 #> [138,] 0.5000000  0.83930699  0.8803508  0.88035076  0.25004618   0.50000000 #> [139,] 0.5000000  0.87226236  0.9102308  0.91023076  0.22040144   0.50000000 #> [140,] 0.5000000  0.90521773  0.9401108  0.94011075  0.19075670   0.50000000 #> [141,] 0.5000000  0.90521773  0.9401108  0.94011075  0.19075670   0.50000000 #> [142,] 0.5000000  0.90521773  0.9401108  0.94011075  0.19075670   0.50000000 #> [143,] 0.5000000  0.93817309  0.9699908  0.96999075  0.16111196   0.40458555 #> [144,] 0.5000000  0.97112846  0.9998707  0.99987075  0.13146721   0.28069744 #> [145,] 0.5000000  1.03703919  1.0596307  1.05963074  0.07217773   0.06782418 #> [146,] 0.5000000  1.06999455  1.0895107  1.08951074  0.04253299   0.05000000 #> [147,] 0.5000000  1.06999455  1.0895107  1.08951074  0.04253299   0.05000000 #> [148,] 0.5000000  1.06999455  1.0895107  1.08951074  0.04253299   0.05000000 #> [149,] 0.5000000  1.06999455  1.0895107  1.08951074  0.04253299   0.05000000 #> [150,] 0.5000000  1.13590528  1.1492707  1.14927073 -0.01675649 979.23190903 #>"},{"path":"https://cbhurley.github.io/bullseye/reference/as.matrix.pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a pairwise to a symmetric matrix. Uses the first entry for each (x,y) pair. — as.matrix.pairwise","title":"Converts a pairwise to a symmetric matrix. Uses the first entry for each (x,y) pair. — as.matrix.pairwise","text":"Converts pairwise symmetric matrix. Uses first entry (x,y) pair.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/as.matrix.pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a pairwise to a symmetric matrix. Uses the first entry for each (x,y) pair. — as.matrix.pairwise","text":"","code":"# S3 method for class 'pairwise' as.matrix(x, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/as.matrix.pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a pairwise to a symmetric matrix. Uses the first entry for each (x,y) pair. — as.matrix.pairwise","text":"x object class pairwise ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/as.matrix.pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a pairwise to a symmetric matrix. Uses the first entry for each (x,y) pair. — as.matrix.pairwise","text":"symmetric matrix","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/bullseye-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bullseye: Visualising multiple pairwise variable correlations and other scores — bullseye-package","title":"bullseye: Visualising multiple pairwise variable correlations and other scores — bullseye-package","text":"provide tidy data structure visualisations multiple grouped variable correlations, general association measures pairwise scores suitable numerical, ordinal nominal variables.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/bullseye-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bullseye: Visualising multiple pairwise variable correlations and other scores — bullseye-package","text":"Maintainer: Catherine Hurley catherine.hurley@mu.ie Authors: Amit Chinwan amit.chinwan.2019@mumail.ie","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":null,"dir":"Reference","previous_headings":"","what":"Alternating conditional expectations correlation — pair_ace","title":"Alternating conditional expectations correlation — pair_ace","text":"Calculates maximal correlation coefficient alternating conditional expectations algorithm every variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alternating conditional expectations correlation — pair_ace","text":"","code":"pair_ace(d, handle.na = T, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alternating conditional expectations correlation — pair_ace","text":"d dataframe handle.na TRUE uses pairwise complete observations, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alternating conditional expectations correlation — pair_ace","text":"tibble class pairwise maximal correlation  alternating conditional expectations algorithm every variable pair","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alternating conditional expectations correlation — pair_ace","text":"maximal correlation calculated using alternating conditional expectations algorithm find transformations variables squared correlation maximised. ace function acepack package used calculation.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Alternating conditional expectations correlation — pair_ace","text":"Breiman, Leo, Jerome H. Friedman. \"Estimating optimal transformations multiple regression correlation.\" Journal American statistical Association 80.391 (1985): 580-598.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_ace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alternating conditional expectations correlation — pair_ace","text":"","code":"pair_ace(iris) #> # A tibble: 10 × 6 #>    x            y            score group value pair_type #>    <chr>        <chr>        <chr> <chr> <dbl> <chr>     #>  1 Petal.Length Sepal.Length ace   all   0.913 nn        #>  2 Petal.Width  Sepal.Length ace   all   0.865 nn        #>  3 Sepal.Length Sepal.Width  ace   all   0.584 nn        #>  4 Petal.Length Sepal.Width  ace   all   0.706 nn        #>  5 Petal.Width  Sepal.Width  ace   all   0.731 nn        #>  6 Petal.Length Petal.Width  ace   all   0.989 nn        #>  7 Sepal.Length Species      ace   all   0.838 fn        #>  8 Sepal.Width  Species      ace   all   0.679 fn        #>  9 Petal.Length Species      ace   all   0.994 fn        #> 10 Petal.Width  Species      ace   all   0.994 fn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cancor.html","id":null,"dir":"Reference","previous_headings":"","what":"Canonical correlation — pair_cancor","title":"Canonical correlation — pair_cancor","text":"Calculates canonical correlation every variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cancor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canonical correlation — pair_cancor","text":"","code":"pair_cancor(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cancor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canonical correlation — pair_cancor","text":"d dataframe handle.na TRUE uses pairwise complete observations calculate correlation coefficient,, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cancor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Canonical correlation — pair_cancor","text":"tibble class pairwise canonical correlation every numeric factor mixed variable pair","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cancor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canonical correlation — pair_cancor","text":"","code":"pair_cancor(iris) #> # A tibble: 10 × 6 #>    x            y            score  group value pair_type #>    <chr>        <chr>        <chr>  <chr> <dbl> <chr>     #>  1 Petal.Length Sepal.Length cancor all   0.872 nn        #>  2 Petal.Width  Sepal.Length cancor all   0.818 nn        #>  3 Sepal.Length Sepal.Width  cancor all   0.118 nn        #>  4 Petal.Length Sepal.Width  cancor all   0.428 nn        #>  5 Petal.Width  Sepal.Width  cancor all   0.366 nn        #>  6 Petal.Length Petal.Width  cancor all   0.963 nn        #>  7 Sepal.Length Species      cancor all   0.787 fn        #>  8 Sepal.Width  Species      cancor all   0.633 fn        #>  9 Petal.Length Species      cancor all   0.970 fn        #> 10 Petal.Width  Species      cancor all   0.964 fn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson's Contingency Coefficient — pair_chi","title":"Pearson's Contingency Coefficient — pair_chi","text":"Calculates Pearson's Contingency coefficient every factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson's Contingency Coefficient — pair_chi","text":"","code":"pair_chi(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson's Contingency Coefficient — pair_chi","text":"d dataframe handle.na TRUE uses pairwise complete observations. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson's Contingency Coefficient — pair_chi","text":"tibble class pairwise calculated Pearson's contingency coefficient every factor variable pair, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pearson's Contingency Coefficient — pair_chi","text":"Pearson's contingency coefficient calculated using ContCoef function DescTools package.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_chi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson's Contingency Coefficient — pair_chi","text":"","code":"pair_chi(iris)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_control.html","id":null,"dir":"Reference","previous_headings":"","what":"Default scores calculated by pairwise_scores — pair_control","title":"Default scores calculated by pairwise_scores — pair_control","text":"Gives list specifying function used two numeric (nn) variables, two factors (ff), two ordinals (oo) factor-numeric pair (fn).","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default scores calculated by pairwise_scores — pair_control","text":"","code":"pair_control(   nn = c(\"pair_cor\", \"pair_dcor\", \"pair_mine\", \"pair_ace\", \"pair_cancor\", \"pair_nmi\",     \"pair_scagnostics\"),   oo = c(\"pair_polychor\", \"pair_tau\", \"pair_gkGamma\", \"pair_gkTau\"),   ff = c(\"pair_cancor\", \"pair_ace\", \"pair_nmi\", \"pair_uncertainty\", \"pair_chi\"),   fn = c(\"pair_cancor\", \"pair_nmi\", \"pair_ace\"),   nnargs = NULL,   ooargs = NULL,   ffargs = NULL,   fnargs = NULL )"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default scores calculated by pairwise_scores — pair_control","text":"nn function numeric pairs variables, return object class pairwise. Use NULL ignore numeric pairs. oo function ordered factor pairs variables, return object class pairwise. Use NULL ignore ordered factor pairs. ff function factor pairs variables (ordered), return object class pairwise. Use NULL ignore factor-factor pairs. fn function factor-numeric pairs variables, return object class pairwise. Use NULL ignore factor-numeric pairs. nnargs arguments nn function ooargs arguments oo function ffargs arguments ff function fnargs arguments fn function","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default scores calculated by pairwise_scores — pair_control","text":"list","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cor.html","id":null,"dir":"Reference","previous_headings":"","what":"Pearson, Spearman or Kendall correlation — pair_cor","title":"Pearson, Spearman or Kendall correlation — pair_cor","text":"Calculates one either pearson, spearman kendall correlation every numeric variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pearson, Spearman or Kendall correlation — pair_cor","text":"","code":"pair_cor(d, method = \"pearson\", handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pearson, Spearman or Kendall correlation — pair_cor","text":"d dataframe method character string correlation coefficient calculated. Either \"pearson\" (default), \"spearman\", \"kendall\". value \"\", three correlations calculated. handle.na TRUE uses pairwise complete observations calculate correlation coefficient, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pearson, Spearman or Kendall correlation — pair_cor","text":"tibble class pairwise calculated association value every numeric variable pair, NULL least two numeric variables","code":""},{"path":[]},{"path":"https://cbhurley.github.io/bullseye/reference/pair_cor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pearson, Spearman or Kendall correlation — pair_cor","text":"","code":"pair_cor(iris) #> # A tibble: 6 × 6 #>   x            y            score   group  value pair_type #>   <chr>        <chr>        <chr>   <chr>  <dbl> <chr>     #> 1 Petal.Length Sepal.Length pearson all    0.872 nn        #> 2 Petal.Width  Sepal.Length pearson all    0.818 nn        #> 3 Sepal.Length Sepal.Width  pearson all   -0.118 nn        #> 4 Petal.Length Sepal.Width  pearson all   -0.428 nn        #> 5 Petal.Width  Sepal.Width  pearson all   -0.366 nn        #> 6 Petal.Length Petal.Width  pearson all    0.963 nn        pair_cor(iris, method=\"kendall\") #> # A tibble: 6 × 6 #>   x            y            score   group   value pair_type #>   <chr>        <chr>        <chr>   <chr>   <dbl> <chr>     #> 1 Petal.Length Sepal.Length kendall all    0.719  nn        #> 2 Petal.Width  Sepal.Length kendall all    0.655  nn        #> 3 Sepal.Length Sepal.Width  kendall all   -0.0770 nn        #> 4 Petal.Length Sepal.Width  kendall all   -0.186  nn        #> 5 Petal.Width  Sepal.Width  kendall all   -0.157  nn        #> 6 Petal.Length Petal.Width  kendall all    0.807  nn        pair_cor(iris, method=\"spearman\") #> # A tibble: 6 × 6 #>   x            y            score    group  value pair_type #>   <chr>        <chr>        <chr>    <chr>  <dbl> <chr>     #> 1 Petal.Length Sepal.Length spearman all    0.882 nn        #> 2 Petal.Width  Sepal.Length spearman all    0.834 nn        #> 3 Sepal.Length Sepal.Width  spearman all   -0.167 nn        #> 4 Petal.Length Sepal.Width  spearman all   -0.310 nn        #> 5 Petal.Width  Sepal.Width  spearman all   -0.289 nn        #> 6 Petal.Length Petal.Width  spearman all    0.938 nn        pair_cor(iris, method=\"all\") #> # A tibble: 18 × 6 #>    x            y            score    group   value pair_type #>    <chr>        <chr>        <chr>    <chr>   <dbl> <chr>     #>  1 Petal.Length Sepal.Length pearson  all    0.872  nn        #>  2 Petal.Width  Sepal.Length pearson  all    0.818  nn        #>  3 Sepal.Length Sepal.Width  pearson  all   -0.118  nn        #>  4 Petal.Length Sepal.Width  pearson  all   -0.428  nn        #>  5 Petal.Width  Sepal.Width  pearson  all   -0.366  nn        #>  6 Petal.Length Petal.Width  pearson  all    0.963  nn        #>  7 Petal.Length Sepal.Length spearman all    0.882  nn        #>  8 Petal.Width  Sepal.Length spearman all    0.834  nn        #>  9 Sepal.Length Sepal.Width  spearman all   -0.167  nn        #> 10 Petal.Length Sepal.Width  spearman all   -0.310  nn        #> 11 Petal.Width  Sepal.Width  spearman all   -0.289  nn        #> 12 Petal.Length Petal.Width  spearman all    0.938  nn        #> 13 Petal.Length Sepal.Length kendall  all    0.719  nn        #> 14 Petal.Width  Sepal.Length kendall  all    0.655  nn        #> 15 Sepal.Length Sepal.Width  kendall  all   -0.0770 nn        #> 16 Petal.Length Sepal.Width  kendall  all   -0.186  nn        #> 17 Petal.Width  Sepal.Width  kendall  all   -0.157  nn        #> 18 Petal.Length Petal.Width  kendall  all    0.807  nn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance correlation — pair_dcor","title":"Distance correlation — pair_dcor","text":"Calculates distance correlation every numeric variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance correlation — pair_dcor","text":"","code":"pair_dcor(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance correlation — pair_dcor","text":"d dataframe handle.na TRUE uses pairwise complete observations calculate distance correlation, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance correlation — pair_dcor","text":"tibble class pairwise distance correlation every numeric variable pair, NULL least two numeric variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance correlation — pair_dcor","text":"distance correlation calculated using dcor2d energy package","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_dcor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance correlation — pair_dcor","text":"","code":"pair_dcor(iris) #> # A tibble: 6 × 6 #>   x            y            score group value pair_type #>   <chr>        <chr>        <chr> <chr> <dbl> <chr>     #> 1 Petal.Length Sepal.Length dcor  all   0.859 nn        #> 2 Petal.Width  Sepal.Length dcor  all   0.827 nn        #> 3 Sepal.Length Sepal.Width  dcor  all   0.311 nn        #> 4 Petal.Length Sepal.Width  dcor  all   0.542 nn        #> 5 Petal.Width  Sepal.Width  dcor  all   0.513 nn        #> 6 Petal.Length Petal.Width  dcor  all   0.974 nn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodman Kruskal's Gamma — pair_gkGamma","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"Calculates Goodman Kruskal's Gamma coefficient every factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"","code":"pair_gkGamma(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"d dataframe handle.na TRUE uses pairwise complete observations, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"tibble class pairwise factor variable pairs Goodman Kruskal's Gamma coefficient, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"Goodman Kruskal's Gamma coefficient calculated using GoodmanKruskalGamma function DescTools package,assumes factor levels given order.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkGamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodman Kruskal's Gamma — pair_gkGamma","text":"","code":"pair_gkGamma(iris)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodman Kruskal's Tau — pair_gkTau","title":"Goodman Kruskal's Tau — pair_gkTau","text":"Calculates Goodman Kruskal's Tau coefficient every factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodman Kruskal's Tau — pair_gkTau","text":"","code":"pair_gkTau(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodman Kruskal's Tau — pair_gkTau","text":"d dataframe handle.na TRUE uses pairwise complete observations, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodman Kruskal's Tau — pair_gkTau","text":"tibble class pairwise Goodman Kruskal's Tau every factor variable pair, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Goodman Kruskal's Tau — pair_gkTau","text":"Goodman Kruskal's Tau coefficient calculated using GoodmanKruskalTau function DescTools package, assumes factor levels given order.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_gkTau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodman Kruskal's Tau — pair_gkTau","text":"","code":"pair_gkTau(iris)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise score functions available in the package — pair_methods","title":"Pairwise score functions available in the package — pair_methods","text":"tibble score functions along types variable pairs functions can applied . also contains information regarding packages used calculate scores range values calculated.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise score functions available in the package — pair_methods","text":"","code":"pair_methods"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_methods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pairwise score functions available in the package — pair_methods","text":"object class tbl_df (inherits tbl, data.frame) 14 rows 7 columns.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise score functions available in the package — pair_methods","text":"tibble","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise score functions available in the package — pair_methods","text":"","code":"pair_methods #> # A tibble: 14 × 7 #>    name             nn    ff    fn    from                        range comments #>    <chr>            <lgl> <lgl> <lgl> <chr>                       <chr> <chr>    #>  1 pair_cor         TRUE  FALSE FALSE cor                         [-1,… \"\"       #>  2 pair_dcor        TRUE  FALSE FALSE energy::dcor2d              [0,1] \"\"       #>  3 pair_mine        TRUE  FALSE FALSE minerva::mine               [0,1] \"\"       #>  4 pair_ace         TRUE  TRUE  TRUE  acepack::ace                [0,1] \"\"       #>  5 pair_cancor      TRUE  TRUE  TRUE  cancor                      [0,1] \"\"       #>  6 pair_nmi         TRUE  TRUE  TRUE  linkspotter::maxNMI         [0,1] \"\"       #>  7 pair_polychor    FALSE TRUE  FALSE polycor::polychor           [-1,… \"factor… #>  8 pair_polyserial  FALSE FALSE TRUE  polycor::polyserial         [-1,… \"factor… #>  9 pair_tau         FALSE TRUE  FALSE DescTools::KendalTauA,B,C,W [-1,… \"factor… #> 10 pair_gkGamma     FALSE TRUE  FALSE DescTools::GoodmanKruskalG… [-1,… \"factor… #> 11 pair_gkTau       FALSE TRUE  FALSE DescTools::GoodmanKruskalT… [0,1] \"factor… #> 12 pair_uncertainty FALSE TRUE  FALSE DescTools::UncertCoef       [0,1] \"\"       #> 13 pair_chi         FALSE TRUE  FALSE DescTools::ContCoef         [0,1] \"\"       #> 14 pair_scag        TRUE  FALSE FALSE scagnostics::scagnostics    [0,1] \"\""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":null,"dir":"Reference","previous_headings":"","what":"MINE family values — pair_mine","title":"MINE family values — pair_mine","text":"Calculates MINE family values every numeric variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MINE family values — pair_mine","text":"","code":"pair_mine(d, method = \"mic\", handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MINE family values — pair_mine","text":"d dataframe method character string MINE value calculated. Either \"mic\" (default), \"mas\", \"mev\", \"mcn\", \"mic-r2\" handle.na TRUE uses pairwise complete observations calculate score, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MINE family values — pair_mine","text":"tibble class pairwise scores numeric variable pairs, NULL least two numeric variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MINE family values — pair_mine","text":"values calculated using mine minerva","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MINE family values — pair_mine","text":"Reshef, David N., et al. \"Detecting novel associations large data sets.\" science 334.6062 (2011): 1518-1524","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_mine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MINE family values — pair_mine","text":"","code":"pair_mine(iris) #> # A tibble: 6 × 6 #>   x            y            score group value pair_type #>   <chr>        <chr>        <chr> <chr> <dbl> <chr>     #> 1 Petal.Length Sepal.Length mic   all   0.768 nn        #> 2 Petal.Width  Sepal.Length mic   all   0.668 nn        #> 3 Sepal.Length Sepal.Width  mic   all   0.277 nn        #> 4 Petal.Length Sepal.Width  mic   all   0.439 nn        #> 5 Petal.Width  Sepal.Width  mic   all   0.435 nn        #> 6 Petal.Length Petal.Width  mic   all   0.918 nn         pair_mine(iris, method=\"mas\") #> # A tibble: 6 × 6 #>   x            y            score group  value pair_type #>   <chr>        <chr>        <chr> <chr>  <dbl> <chr>     #> 1 Petal.Length Sepal.Length mas   all   0.0665 nn        #> 2 Petal.Width  Sepal.Length mas   all   0.0365 nn        #> 3 Sepal.Length Sepal.Width  mas   all   0.0501 nn        #> 4 Petal.Length Sepal.Width  mas   all   0.109  nn        #> 5 Petal.Width  Sepal.Width  mas   all   0.0729 nn        #> 6 Petal.Length Petal.Width  mas   all   0.0803 nn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates multiple scores — pair_multi","title":"Calculates multiple scores — pair_multi","text":"Calculates multiple scores every variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates multiple scores — pair_multi","text":"","code":"pair_multi(   d,   scores = c(\"pair_cor\", \"pair_dcor\", \"pair_mine\", \"pair_ace\", \"pair_cancor\", \"pair_nmi\",     \"pair_uncertainty\", \"pair_chi\"),   handle.na = T )"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates multiple scores — pair_multi","text":"d dataframe scores vector naming pairwise functions. handle.na TRUE uses pairwise complete observations calculate pairwise score, otherwise NAs handled.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates multiple scores — pair_multi","text":"tibble class \"pairwise\"","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates multiple scores — pair_multi","text":"","code":"iris1 <- iris iris1$Sepal.Length <- cut(iris1$Sepal.Length,3) pair_multi(iris1) #> # A tibble: 44 × 6 #>    x            y           score   group  value pair_type #>    <chr>        <chr>       <chr>   <chr>  <dbl> <chr>     #>  1 Petal.Length Sepal.Width pearson all   -0.428 nn        #>  2 Petal.Width  Sepal.Width pearson all   -0.366 nn        #>  3 Petal.Length Petal.Width pearson all    0.963 nn        #>  4 Petal.Length Sepal.Width dcor    all    0.542 nn        #>  5 Petal.Width  Sepal.Width dcor    all    0.513 nn        #>  6 Petal.Length Petal.Width dcor    all    0.974 nn        #>  7 Petal.Length Sepal.Width mic     all    0.439 nn        #>  8 Petal.Width  Sepal.Width mic     all    0.435 nn        #>  9 Petal.Length Petal.Width mic     all    0.918 nn        #> 10 Petal.Length Sepal.Width ace     all    0.706 nn        #> # ℹ 34 more rows"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized mutual information — pair_nmi","title":"Normalized mutual information — pair_nmi","text":"Calculates normalized mutual information every numeric factor mixed variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized mutual information — pair_nmi","text":"","code":"pair_nmi(d, handle.na = T, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized mutual information — pair_nmi","text":"d dataframe handle.na TRUE uses pairwise complete observations calculate normalized mutual information, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized mutual information — pair_nmi","text":"tibble class pairwise","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalized mutual information — pair_nmi","text":"normalized mutual information calculated using maxNMI linkpotter package","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_nmi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized mutual information — pair_nmi","text":"","code":"pair_nmi(iris) #> # A tibble: 10 × 6 #>    x            y            score group value pair_type #>    <chr>        <chr>        <chr> <chr> <dbl> <chr>     #>  1 Petal.Length Sepal.Length nmi   all   0.699 nn        #>  2 Petal.Width  Sepal.Length nmi   all   0.632 nn        #>  3 Sepal.Length Sepal.Width  nmi   all   0.203 nn        #>  4 Petal.Length Sepal.Width  nmi   all   0.379 nn        #>  5 Petal.Width  Sepal.Width  nmi   all   0.370 nn        #>  6 Petal.Length Petal.Width  nmi   all   0.835 nn        #>  7 Sepal.Length Species      nmi   all   0.487 fn        #>  8 Sepal.Width  Species      nmi   all   0.261 fn        #>  9 Petal.Length Species      nmi   all   0.870 fn        #> 10 Petal.Width  Species      nmi   all   0.892 fn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":null,"dir":"Reference","previous_headings":"","what":"Polychoric correlation — pair_polychor","title":"Polychoric correlation — pair_polychor","text":"Calculates Polychoric correlation using  every factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polychoric correlation — pair_polychor","text":"","code":"pair_polychor(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polychoric correlation — pair_polychor","text":"d dataframe handle.na ignored. Pairwise complete observations used automatically. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polychoric correlation — pair_polychor","text":"tibble class pairwise polychoric correlation factor pairs, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polychoric correlation — pair_polychor","text":"polychoric correlation calculated using polychor function polycor package, assumes factor levels given order. NAs automatically handled pairwise omit.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polychor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polychoric correlation — pair_polychor","text":"","code":"pair_polychor(iris)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":null,"dir":"Reference","previous_headings":"","what":"Polyserial correlation — pair_polyserial","title":"Polyserial correlation — pair_polyserial","text":"Calculates Polyserial correlation using  every factor-numeric variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polyserial correlation — pair_polyserial","text":"","code":"pair_polyserial(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Polyserial correlation — pair_polyserial","text":"d dataframe handle.na ignored. Pairwise complete observations used automatically. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Polyserial correlation — pair_polyserial","text":"tibble class pairwise polyserial correlation factor-numeric pairs, NULL least one pair.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Polyserial correlation — pair_polyserial","text":"polyserial correlation calculated using polyserial function polycor package, assumes factor levels given order. NAs automatically handled pairwise omit.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_polyserial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polyserial correlation — pair_polyserial","text":"","code":"pair_polyserial(iris) #> # A tibble: 4 × 6 #>   x            y       score      group  value pair_type #>   <chr>        <chr>   <chr>      <chr>  <dbl> <chr>     #> 1 Sepal.Length Species polyserial all    0.879 fn        #> 2 Sepal.Width  Species polyserial all   -0.479 fn        #> 3 Petal.Length Species polyserial all    1.00  fn        #> 4 Petal.Width  Species polyserial all    1.00  fn"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph-theoretic scagnostics values — pair_scagnostics","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"Calculates  scagnostic values every numeric variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"","code":"pair_scagnostics(   d,   scagnostic = c(\"Outlying\", \"Skewed\", \"Clumpy\", \"Sparse\", \"Striated\", \"Convex\",     \"Skinny\", \"Stringy\", \"Monotonic\"),   handle.na = T,   ... )"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"d dataframe scagnostic character vector scagnostic calculated. Subset \"Outlying\", \"Stringy\", \"Striated\", \"Clumpy\", \"Sparse\", \"Skewed\", \"Convex\", \"Skinny\" \"Monotonic\" handle.na TRUE uses pairwise complete observations. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"tibble class pairwise  scagnostic values every numeric variable pair, NULL least two numeric variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"scagnostic values calculated using scagnostics function scagnostics package.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"Wilkinson, Leland, Anushka Anand, Robert Grossman. \"Graph-theoretic scagnostics.\" Information Visualization, IEEE Symposium . IEEE Computer Society, 2005","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_scagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graph-theoretic scagnostics values — pair_scagnostics","text":"","code":"pair_scagnostics(iris) #> # A tibble: 54 × 6 #>    x            y            score    group  value pair_type #>    <chr>        <chr>        <chr>    <chr>  <dbl> <chr>     #>  1 Petal.Length Sepal.Length Outlying all   0.247  nn        #>  2 Petal.Width  Sepal.Length Outlying all   0.0767 nn        #>  3 Sepal.Length Sepal.Width  Outlying all   0.168  nn        #>  4 Petal.Length Sepal.Width  Outlying all   0.263  nn        #>  5 Petal.Width  Sepal.Width  Outlying all   0.451  nn        #>  6 Petal.Length Petal.Width  Outlying all   0.0484 nn        #>  7 Petal.Length Sepal.Length Skewed   all   0.643  nn        #>  8 Petal.Width  Sepal.Length Skewed   all   0.743  nn        #>  9 Sepal.Length Sepal.Width  Skewed   all   0.736  nn        #> 10 Petal.Length Sepal.Width  Skewed   all   0.578  nn        #> # ℹ 44 more rows"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":null,"dir":"Reference","previous_headings":"","what":"Kendall's tau A, B, C and Kendall's W — pair_tau","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"Calculates one either Kendall's tau , B, C Kendall's W every  factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"","code":"pair_tau(d, method = c(\"B\", \"A\", \"C\", \"W\"), ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"d dataframe method character string correlation coefficient calculated, one \"B\" (default), \"\", \"C\" \"W\". value \"\", four correlations calculated. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"tibble class pairwise factor pairs along one either Kendall's tau , B, C Kendall's W value, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"association values Kendall's tau , B, C Kendall's W calculated using KendallTauA, KendallTauB, StuartTauC KendallW respectively,DescTools package, assumes factor levels given order. NAs automatically handled pairwise omit.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_tau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kendall's tau A, B, C and Kendall's W — pair_tau","text":"","code":"pair_tau(iris)  pair_tau(iris, method=\"A\")  pair_tau(iris, method=\"C\")  pair_tau(iris, method=\"W\")"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":null,"dir":"Reference","previous_headings":"","what":"Uncertainty coefficient — pair_uncertainty","title":"Uncertainty coefficient — pair_uncertainty","text":"Calculates uncertainty coefficient every factor variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Uncertainty coefficient — pair_uncertainty","text":"","code":"pair_uncertainty(d, handle.na = TRUE, ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Uncertainty coefficient — pair_uncertainty","text":"d dataframe handle.na TRUE uses pairwise complete observations calculate uncertainty coefficient, otherwise NAs handled. ... arguments","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Uncertainty coefficient — pair_uncertainty","text":"tibble class pairwise every factor variable pair uncertainty coefficient value, NULL least two factor variables","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Uncertainty coefficient — pair_uncertainty","text":"Uncertainty coefficient calculated using UncertCoef function DescTools package.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pair_uncertainty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Uncertainty coefficient — pair_uncertainty","text":"","code":"pair_uncertainty(iris)"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic function to create a data structure for every variable pair in a dataset — pairwise","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"Creates data structure every variable pair dataset.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"","code":"pairwise(x, score = NA_character_, pair_type = NA_character_)  # S3 method for class 'matrix' pairwise(x, score = NA_character_, pair_type = NA_character_)  # S3 method for class 'data.frame' pairwise(x, score = NA_character_, pair_type = NA_character_)  as.pairwise(x, score = NA_character_, pair_type = NA_character_)"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"x dataframe symmetric matrix. score character string indicating value association. pair_type character string specifying type variable pair.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"tbl_df class pairwise pairs variables column value score value, score type association value pair_type type variable pair.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"pairwise(matrix): pairwise method pairwise(data.frame): pairwise method","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":".pairwise(): pairwise","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A generic function to create a data structure for every variable pair in a dataset — pairwise","text":"","code":"pairwise(cor(iris[,1:4]), score=\"pearson\") #> # A tibble: 6 × 6 #>   x            y            score   group  value pair_type #>   <chr>        <chr>        <chr>   <chr>  <dbl> <chr>     #> 1 Petal.Length Sepal.Length pearson all    0.872 NA        #> 2 Petal.Width  Sepal.Length pearson all    0.818 NA        #> 3 Sepal.Length Sepal.Width  pearson all   -0.118 NA        #> 4 Petal.Length Sepal.Width  pearson all   -0.428 NA        #> 5 Petal.Width  Sepal.Width  pearson all   -0.366 NA        #> 6 Petal.Length Petal.Width  pearson all    0.963 NA        pairwise(iris) #> # A tibble: 10 × 6 #>    x            y            score group value pair_type #>    <chr>        <chr>        <chr> <chr> <dbl> <chr>     #>  1 Petal.Length Sepal.Length NA    all      NA nn        #>  2 Petal.Width  Sepal.Length NA    all      NA nn        #>  3 Sepal.Length Sepal.Width  NA    all      NA nn        #>  4 Petal.Length Sepal.Width  NA    all      NA nn        #>  5 Petal.Width  Sepal.Width  NA    all      NA nn        #>  6 Petal.Length Petal.Width  NA    all      NA nn        #>  7 Sepal.Length Species      NA    all      NA fn        #>  8 Sepal.Width  Species      NA    all      NA fn        #>  9 Petal.Length Species      NA    all      NA fn        #> 10 Petal.Width  Species      NA    all      NA fn"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a pairwise result for each level of a by variable. — pairwise_by","title":"Constructs a pairwise result for each level of a by variable. — pairwise_by","text":"Constructs pairwise result level variable.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a pairwise result for each level of a by variable. — pairwise_by","text":"","code":"pairwise_by(d, by, pair_fun, ungrouped = TRUE)"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a pairwise result for each level of a by variable. — pairwise_by","text":"d dataframe character string name conditioning variable. pair_fun One pair_ functions ungrouped TRUE calculates ungrouped score addition grouped scores.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a pairwise result for each level of a by variable. — pairwise_by","text":"tibble class \"pairwise\"","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a pairwise result for each level of a by variable. — pairwise_by","text":"","code":"pairwise_by(iris, by=\"Species\", pair_cor) #> # A tibble: 24 × 6 #>    x            y            score   group      value pair_type #>    <chr>        <chr>        <chr>   <fct>      <dbl> <chr>     #>  1 Petal.Length Sepal.Length pearson setosa     0.267 nn        #>  2 Petal.Width  Sepal.Length pearson setosa     0.278 nn        #>  3 Sepal.Length Sepal.Width  pearson setosa     0.743 nn        #>  4 Petal.Length Sepal.Width  pearson setosa     0.178 nn        #>  5 Petal.Width  Sepal.Width  pearson setosa     0.233 nn        #>  6 Petal.Length Petal.Width  pearson setosa     0.332 nn        #>  7 Petal.Length Sepal.Length pearson versicolor 0.754 nn        #>  8 Petal.Width  Sepal.Length pearson versicolor 0.546 nn        #>  9 Sepal.Length Sepal.Width  pearson versicolor 0.526 nn        #> 10 Petal.Length Sepal.Width  pearson versicolor 0.561 nn        #> # ℹ 14 more rows"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates scores or conditional scores for a dataset — pairwise_scores","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"Calculates scores every variable pair dataset NULL. name variable dataset, conditional scores every variable pair different levels grouping variable calculated.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"","code":"pairwise_scores(   d,   by = NULL,   ungrouped = TRUE,   control = pair_control(),   handle.na = TRUE )"},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"d dataframe character string name conditioning variable. Set NULL default. ungrouped Ignored NULL. TRUE calculates ungrouped score addition grouped scores. control list measures calculated different variable types. default pair_control() calculates Pearson's correlation variable pair numeric, canonical correlation factor mixed pairs, polychoric correlation two ordered factors. handle.na TRUE uses pairwise complete observations calculate measure association.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"tibble class pairwise.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"Returns pairwise tibble structure.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/pairwise_scores.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates scores or conditional scores for a dataset — pairwise_scores","text":"","code":"irisc <- pairwise_scores(iris) irisc <- pairwise_scores(iris, control=pair_control(nnargs= c(method=\"spearman\"))) irisc <- pairwise_scores(iris, control=pair_control(fn=\"pair_ace\"))  #Lots of numerical measures irisc <- pairwise_scores(iris, control=pair_control(nn=\"pair_multi\", fn=NULL)) irisc <- pairwise_scores(iris, control=pair_control(nn=\"pair_multi\", nnargs=\"pair_cor\", fn=NULL)) #conditional measures cond_iris <- pairwise_scores(iris, by = \"Species\")  cond_iris_wo <- pairwise_scores(iris, by = \"Species\",ungrouped=FALSE) # without overall irisc <- pairwise_scores(iris, control=pair_control(nn=\"pair_multi\", fn=NULL)) irisc <- pairwise_scores(iris, by = \"Species\",control=pair_control(nn=\"pair_multi\", fn=NULL))  #scagnostics sc <- pairwise_scores(iris, control=pair_control(nn=\"pair_scagnostics\", fn=NULL)) # ignore fn pairs sc <- pairwise_scores(iris, by = \"Species\",                   control=pair_control(nn=\"pair_scagnostics\", fn=NULL)) # ignore fn pairs"},{"path":"https://cbhurley.github.io/bullseye/reference/plot.pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot method for class pairwise. — plot.pairwise","title":"Plot method for class pairwise. — plot.pairwise","text":"Plot method class pairwise.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot.pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot method for class pairwise. — plot.pairwise","text":"","code":"# S3 method for class 'pairwise' plot(x, type = c(\"matrix\", \"linear\"), ...)"},{"path":"https://cbhurley.github.io/bullseye/reference/plot.pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot method for class pairwise. — plot.pairwise","text":"x object class pairwise type \"matrix\", calls plot_pairwise, \"linear\" calls plot_pairwise_linear ... arguments plot_pairwise plot_pairwise_linear","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot.pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot method for class pairwise. — plot.pairwise","text":"plot","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot.pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot method for class pairwise. — plot.pairwise","text":"","code":"plot(pairwise_scores(iris)) #> Registered S3 methods overwritten by 'registry': #>   method               from  #>   print.registry_field proxy #>   print.registry_entry proxy #> Registered S3 method overwritten by 'seriation': #>   method         from  #>   reorder.hclust gclus"},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise plot in a matrix layout — plot_pairwise","title":"Pairwise plot in a matrix layout — plot_pairwise","text":"Plots multiple pairwise variable scores matrix layout.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise plot in a matrix layout — plot_pairwise","text":"","code":"plot_pairwise(   scores,   var_order = \"seriate_max\",   score_limits = NULL,   inner_width = 0.5,   center_level = \"all\",   na.value = \"grey80\",   interactive = FALSE )"},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise plot in a matrix layout — plot_pairwise","text":"scores scores  matrix plot. Either class pairwise identical structure object class pairwise. var_order variable order used. default NULL means variables ordered alphabetically. value \"seriate_max\" means variables re-ordered emphasize pairs maximum abolute scores. value \"seriate_max_diff\" means variables re-ordered emphasize pairs maximum score differences. Otherwise Var_order must subset variables scores. score_limits numeric vector length specifying limits scale. inner_width number 0 1 specifying radius inner bullseye. center_level Specifies level group goes innter bullseye. Defaults \"\". na.value used scores value NA interactive defaults FALSE","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise plot in a matrix layout — plot_pairwise","text":"girafe object interactive==TRUE, otherwise ggplot2.  scores one value x,y pair, filled circle drawn fill representing score value. multiple values x,y pair filled circle split wedges, wedge fill representing values. rows group=center_level, glyph drawn bullseye.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise plot in a matrix layout — plot_pairwise","text":"","code":"plot_pairwise(pair_cor(iris))  plot_pairwise(pairwise_scores(iris,by=\"Species\"))"},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise_linear.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise plot in a linear layout — plot_pairwise_linear","title":"Pairwise plot in a linear layout — plot_pairwise_linear","text":"Plots calculated measures association among different variable pairs dataset linear layout.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise_linear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise plot in a linear layout — plot_pairwise_linear","text":"","code":"plot_pairwise_linear(   scores,   pair_order = \"seriate_max\",   geom = c(\"tile\", \"point\"),   add_lines = FALSE,   score_limits = NULL,   na.value = \"grey80\",   interactive = FALSE )"},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise_linear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise plot in a linear layout — plot_pairwise_linear","text":"scores tibble calculated association measures  matrix plot. Either class pairwise identical structure object class pairwise. pair_order variable pair order used. default NULL means pairs order first appearance scores. value \"seriate_max\" means pairs order  maximum absolute scores. value \"seriate_max_diff\" means pairs order maximum scores difference. geom geom used. \"point\" \"tile\". add_lines geom= \"point\" used, points connected lines? Defaults FALSE. score_limits numeric vector length specifying limits scale. na.value used geom_tile value NA interactive defaults FALSE","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise_linear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise plot in a linear layout — plot_pairwise_linear","text":"girafe object interactive==TRUE, otherwise ggplot2.","code":""},{"path":"https://cbhurley.github.io/bullseye/reference/plot_pairwise_linear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pairwise plot in a linear layout — plot_pairwise_linear","text":"","code":"plot_pairwise_linear(pairwise_scores(iris))  plot_pairwise_linear(pairwise_scores(iris,by=\"Species\"))  plot_pairwise_linear(pair_multi(iris), geom=\"point\")"}]
